@startuml General_SequenceDiagram_Group01

title General Sequence Diagram, Group01.

participant ScientificCalculator as calc
participant InputDistinguisher as input
participant MathOperation as math
participant StackOperation as stack
participant VariablesOperation as Variables

-> calc:calculate()
activate calc


' math op case starts
alt input is a math operation

calc -> input : IsMathOperation()
activate input
input -> input : checks if input is a mathematical operation
input --> calc : mathOperation : boolean
deactivate input

calc -> calc : calculateMathOperation()
math -> math : execute()
activate math
deactivate math


' stack op case starts
else input is a stack operation

calc -> input : IsStackOperation()
activate input
input -> input : checks if input is a stack operation
input --> calc : stackOperation : boolean
deactivate input

calc -> calc : calculateStackOperation()
stack -> stack : execute()
activate stack
deactivate stack


' variables op case starts
else input is a variables operation

calc -> input : IsVariablesOperation()
activate input
input -> input : checks if input is a variables operation
input --> calc : VariablesOperation : boolean
deactivate input

calc -> calc : calculateVariablesOperation()
Variables -> Variables : execute()
activate Variables
deactivate Variables


' complex number case starts
else input is a complex number 

calc -> input : IsComplexNumber()
activate input
input -> input : checks if input is a complex number
input --> calc : ComplexNumber : boolean
deactivate input

calc -> calc : saveComplexNumber()

end

@enduml